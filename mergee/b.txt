<<<<<<< ours\nvoid Chunk_copy(Chunk *src, size_t src_start, Chunk *dst, size_t dst_start, size_t n)\n{\n    if (!Chunk_bounds_check(src, src_start, n)) return;\n    if (!Chunk_bounds_check(dst, dst_start, n)) return;\n    int Chunk_bounds_check(Chunk *chunk, size_t start, size_t n)\n{\n    if (chunk == NULL) return 0;\n\n    return start <= chunk->length && n <= chunk->length - start;\n}\n\n    memcpy(dst->data + dst_start, src->data + src_start, n);\n}\n\nint Chunk_bounds_check(Chunk *chunk, size_t start, size_t n)\n{\n    if (chunk == NULL) return 0;\n\n    return start <= chunk->length && n <= chunk->length - start;\n}\n=======\nvoid Chunk_copy(Chunk *src, size_t src_start, Chunk *dst, size_t dst_start, size_t n)\n{\n    if (!Chunk_bounds_check(src, src_start, n)) return;\n    if (!Chunk_bounds_check(dst, dst_start, n)) return;\n    memcpy(dst->data + dst_start, src->data + src_start, n);\n}\n\nint Chunk_bounds_check(Chunk *chunk, size_t start, size_t n)\n{\n    if (chunk == NULL) return 0;\n\n    return start <= chunk->length && n <= chunk->length - start;\n}\n>>>>>>> theirs\n